{"version":3,"sources":["components/GlobalSearch.js","components/columns.js","components/api.js","components/PaginationTable.js","App.js","reportWebVitals.js","index.js"],"names":["GlobalSearch","input","setInput","value","onChange","val","target","COLUMNS","Header","accessor","dataApi","a","fetch","res","ok","console","error","status","json","PaginationTable","props","useState","userList","setUserList","fav","useEffect","then","data","columns","useMemo","useTable","useFilters","useGlobalFilter","usePagination","getTableProps","getTableBodyProps","headerGroups","page","nextPage","previousPage","canNextPage","canPreviousPage","prepareRow","pageOptions","setPageSize","state","setGlobalFilter","globalFilter","pageIndex","pageSize","style","backgroundColor","color","fontSize","padding","border_radius","onClick","e","log","alert","map","headerGroup","getHeaderGroupProps","headers","column","getHeaderProps","render","row","getRowProps","cells","cell","getCellProps","d","original","bank_name","includes","push","add","i","length","splice","remove","ifsc","branch","city","district","hello","event","Number","disabled","App","className","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.c0cc9bb6.chunk.js","sourcesContent":["import React from 'react'\n\nexport const GlobalSearch = ({input,setInput}) => {\n    return (\n        <span>\n            Search : {''}\n            <input value={input || ''}\n            onChange={(val)=> setInput(val.target.value)}\n            />\n        </span>\n    )\n}\n","export const COLUMNS=[\n    {\n        Header: 'IFSC CODE',\n        accessor: 'ifsc'\n    },\n    {\n        Header: 'BANK ID',\n        accessor: 'bank_id'\n    },\n    {\n        Header: 'BRANCH',\n        accessor: 'branch'\n    },\n    {\n        Header: 'ADDRESS',\n        accessor: 'address'\n    },\n    {\n        Header: 'CITY',\n        accessor: 'city'\n    },\n    {\n        Header: 'DISTRICT',\n        accessor: 'district'\n    },\n    {\n        Header: 'STATE',\n        accessor: 'state'\n    },\n    {\n        Header: 'BANK NAME',\n        accessor: 'bank_name'\n    }\n]","const baseURL = \"https://vast-shore-74260.herokuapp.com/banks?city=MUMBAI\";\n\nexport const dataApi = async () => {\n  const CACHE_KEY = 'GET/items';\n    try {\n    const res = await fetch(`${baseURL}`);\n    if (!res.ok) {\n    console.error(\"failed\", res.status);\n      return;\n    }\n   \n    const json = await res.json();\n    return json;\n  } catch (error) {\n    console.error(\"error : \", error);\n  }\n  \n};","import React, { useMemo, useState, useEffect } from \"react\";\nimport {\n  useTable,\n  useGlobalFilter,\n  usePagination,\n  useFilters,\n} from \"react-table\";\nimport { GlobalSearch } from \"./GlobalSearch\";\nimport \"./table.css\";\n//import data from './data/data.json';\nimport { COLUMNS } from \"./columns\";\nimport { dataApi } from \"./api\";\nimport useSWR from \"swr\";\nimport axios from \"axios\";\nimport { Detail } from \"./Detail\";\n\nexport const PaginationTable = (props) => {\n  const [userList, setUserList] = useState([]);\n  const [fav,setFav]=useState([]);\n\n  useEffect(() => {\n    dataApi().then((data) => {\n      setUserList(data);\n    });\n  }, []);\n\n  const columns = useMemo(() => COLUMNS, []);\n  const data = useMemo(() => userList, []);\n\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    page,\n    nextPage,\n    previousPage,\n    canNextPage,\n    canPreviousPage,\n    prepareRow,\n    pageOptions,\n    setPageSize,\n    state,\n    setGlobalFilter,\n  } = useTable(\n    {\n      columns,\n      data,\n    },\n    useFilters,\n    useGlobalFilter,\n    usePagination\n  );\n\n  function prin(){\n    console.log(fav[0]);\n      alert(`                           YOUR FAVOURITE BANKS :\\n${fav.map((e)=>e)}`);\n  }\n    \n  function hello(e) {\n    var d=e.original;\n    alert(`Bank Name : ${d.bank_name}\\nIFSC : ${d.ifsc}\\nBranch : ${d.branch}\\nCity : ${d.city}\\nDistrict : ${d.district}\\nState : ${d.state}\\n`);\n  }\n\n  function add(e){\n    var d=e.original.bank_name;\n    const ref=fav.includes(d);\n    if(ref==true){\n        alert('alreadypresent')\n    }else{\n      fav.push(d);\n      //alert('added to favourite')\n      alert(`added to fav \\n${d}`)\n    }\n   \n  }\n\n  function remove(e){\n    var d=e.original.bank_name;\n    for( var i = 0; i < fav.length; i++){ \n                                   \n      if ( fav[i] === d) { \n          fav.splice(i, 1); \n          alert(`${d} removed from favourite list.`)\n          return;\n      }\n  }\n    alert(`not in the list`)\n  }\n\n  const [list, setList] = useState([]);\n\n  const { globalFilter, pageIndex, pageSize } = state;\n\n  return (\n    <>  \n    <button style={{backgroundColor:\"grey\",\n                        color:\"black\",\n                        fontSize:\"20px\",\n                        padding: \"10px 60px\",\n                        border_radius: \"5px\"\n      }}>Bank Search Applicaion</button>\n      <br />\n      <center>\n        {\" \"}\n        <GlobalSearch input={globalFilter} setInput={setGlobalFilter} /><br/><br/>\n        <button style={{backgroundColor:\"grey\",\n                        color:\"white\",\n                        fontSize:\"20px\",\n                        padding: \"10px 60px\",\n                        border_radius: \"5px\"\n      }} onClick={(e)=>prin()}>Favourite List Of Banks</button>\n      </center>\n      <br />\n\n      <table {...getTableProps()}>\n        <thead>\n          {headerGroups.map((headerGroup) => (\n            <tr {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                <th {...column.getHeaderProps()}>{column.render(\"Header\")}</th>\n              ))}\n              <th>add/remove/view</th>\n            </tr>\n            \n          ))}\n        </thead>\n\n        <tbody {...getTableBodyProps()}>\n          {page.map((row) => {\n            prepareRow(row);\n            return (\n              <tr  {...row.getRowProps()}>\n                {row.cells.map((cell) => {\n                  return (\n              \n                    <td {...cell.getCellProps()}>{cell.render(\"Cell\")}\n                \n                    </td>\n                    \n                  );\n               \n                })}\n              <center>\n            <button style={{backgroundColor:\"grey\",color:\"white\"}} onClick={(e)=>add(row)}>add-to-fav</button>\n            <button style={{backgroundColor:\"grey\" ,color:\"white\"}} onClick={(e)=>remove(row)}>remove-from-fav</button>\n            <button style={{backgroundColor:\"grey\" ,color:\"white\"}} onClick={(e)=>hello(row)}>view-details</button>\n            </center>\n\n              </tr>\n              \n            );\n          })}\n        \n        </tbody>\n      </table>\n\n      <div>\n        <span>\n          <select\n            value={pageSize}\n            onChange={(event) => setPageSize(Number(event.target.value))}\n          >\n            {[3, 4, 6, 8].map((pageSize) => (\n              <option key={pageSize} value={pageSize}>\n                Show {pageSize}\n              </option>\n            ))}\n          </select>\n          Page{\" \"}\n          <strong>\n            {pageIndex + 1} of {pageOptions.length}\n          </strong>{\" \"}\n        </span>\n\n        <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n          Previous\n        </button>\n        <button onClick={() => nextPage()} disabled={!canNextPage}>\n          Next\n        </button>\n      </div>\n    </>\n  );\n};\n","import {PaginationTable} from './components/PaginationTable'\n\nfunction App() {\n  return (\n    <div className=\"app\">\n      <PaginationTable/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}